# -*- coding: utf-8 -*-
"""EmailVerifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DLLsC9FeiiqSSriHNMR1pilrNu04Nwix
"""

!pip install dnspython phonenumbers

import smtplib
import dns.resolver
import re

def isEmailValidDnsLookup(email):
    # verify email using dns lookup
    email = str(email).strip()
    user, domain = email.split('@')
    ips = dns.resolver.resolve(domain, 'MX')
    for ip in ips:
        try:
            mxRecord = ip.exchange.to_text()
            smtp = smtplib.SMTP(mxRecord)
            smtp.ehlo(domain)
            smtp.docmd("mail from:<sender@example.io>")
            status, message = smtp.docmd("rcpt to:<"+email+">")
            if status != 250:
              print(status,message)
              return False
            smtp.quit()
            return True
        except BaseException as e:
            print(e)
            continue
    return False

def isEmailFormatValid(email):
    if len(email.strip()) == 0:
        return False
    try:
        return bool(re.search('''(?!.*\.{2})^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([\t]*\r\n)?[\t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([\t]*\r\n)?[\t]+)?")@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$''', email))
    except:
        return False

def extractValidEmails(emails):
    print(emails)
    validEmails = list()
    for email in emails:
        email = email.strip()
        if len(email) == 0:
            continue
        if isEmailFormatValid(email) and isEmailFormatValid(email):
            validEmails.append(email)
    return validEmails

listOfEmails = ["info@vivaladirtleague.com","worngMail@someservercheck.kon"]
print(extractValidEmails(listOfEmails))